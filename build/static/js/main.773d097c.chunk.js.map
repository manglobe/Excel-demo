{"version":3,"sources":["components/Table/Table.module.css","components/Cell/Cell.module.css","components/SortCell/SortCell.module.css","components/Cell/Cell.tsx","components/Cell/index.tsx","components/Table/Table.tsx","components/Table/index.tsx","components/SortCell/SortCell.tsx","components/SortCell/index.tsx","tools/strEval.ts","tools/sortGrid.ts","tools/createGrid.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","table","tbody","thead","cell","editor","sortCell","up","down","CellEditor","_ref","visible","value","onChange","onConfirm","onCancel","inputRef","react_default","a","createElement","ref","className","style","type","onKeyDown","e","keyCode","Cell","wrapDom","editorDom","state","EditMode","editValue","enterEditMod","_this","setState","props","window","addEventListener","addLeaveEditListener","focus","contains","target","leaveEditMod","needSaveValue","nextValue","removeEventListener","onEditHandle","val","_this2","this","view","onDoubleClick","el","React","PureComponent","Thead","columns","map","column","key","id","thContent","Tbody","_ref2","data","rowEle","rowIndex","tdRender","Table","_this$props","getNextDirection","current","console","error","SortCell","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","sortHandle","nextDirection","direction","defaultValue","concat","onClick","children","operatorFunctions","+","b","Number","-","*","/","%","^","Math","pow","checkWordType","str","test","Error","priorityMap","Stack","arr","stack","push","_this$stack$push","_len","arguments","length","args","Array","_key","apply","pop","get","number","popUntil","func","poped","top","evalStr","afterExpressArr","match","i","_loop","currentWord","stackTop","stackOperator","hasOwnProperty","forEach","operator","translateMidExpress2AfterExpressArr","top2","result","transpose","grid","newGrid","j","sortGrid","index","isRow","sortFunc","clonedGrid","JSON","parse","stringify","sort","_grid","createEmptyGrid","x","y","item","fill","sortFuncs","_findUnEmpty","findUnEmpty","toConsumableArray","collect","indexCollect","ele","_findUnEmpty2","normal","defRowCount","defColumnCount","dealValue2View","substr","strEval","App","createGrid","sortQueue","cellChangeHandle","colIndex","nextVal","changeData","onSort","sortType","findedIndex","findIndex","splice","nextSortItem","components_SortCell","String","fromCharCode","word","components_Cell","components_Table","tableData","_this$state","newData","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.773d097c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Table_table__22rvr\",\"tbody\":\"Table_tbody__1-dJl\",\"thead\":\"Table_thead__QpyiK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"Cell_cell__3gVrq\",\"editor\":\"Cell_editor__34wAZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sortCell\":\"SortCell_sortCell__1z6i5\",\"up\":\"SortCell_up__3m2Ap\",\"down\":\"SortCell_down__37hF-\"};","import React from \"react\";\r\nimport style from \"./Cell.module.css\";\r\nexport interface Props {\r\n  view?: string;\r\n  value?: string;\r\n  onChange?: (nextValue?: string) => void;\r\n}\r\ntype State = {\r\n  EditMode: boolean;\r\n  editValue: string;\r\n};\r\nclass Cell extends React.PureComponent<Props, State> {\r\n  wrapDom: HTMLDivElement | null = null;\r\n  editorDom: HTMLInputElement | null = null;\r\n  state = {\r\n    EditMode: false,\r\n    editValue: \"\"\r\n  };\r\n\r\n  enterEditMod = () => {\r\n    this.setState(\r\n      {\r\n        EditMode: true,\r\n        editValue: this.props.value || \"\"\r\n      },\r\n      () => {\r\n        window.addEventListener(\"click\", this.addLeaveEditListener);\r\n        this.editorDom && this.editorDom.focus();\r\n      }\r\n    );\r\n  };\r\n\r\n  addLeaveEditListener = (e: MouseEvent) => {\r\n    if (this.wrapDom && !this.wrapDom.contains(e.target as Node)) {\r\n      this.leaveEditMod(true);\r\n    }\r\n  };\r\n\r\n  leaveEditMod = (needSaveValue: boolean) => {\r\n    const { onChange } = this.props;\r\n    const { editValue: nextValue } = this.state;\r\n    if (needSaveValue) {\r\n      onChange && onChange(nextValue || this.props.value);\r\n    }\r\n    window.removeEventListener(\"click\", this.addLeaveEditListener);\r\n    this.setState({\r\n      EditMode: false\r\n    });\r\n  };\r\n  onEditHandle = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const val = e.target.value;\r\n    this.setState({\r\n      editValue: val\r\n    });\r\n  };\r\n  render() {\r\n    const { view } = this.props;\r\n    return (\r\n      <div\r\n        className={style.cell}\r\n        onDoubleClick={this.enterEditMod}\r\n        ref={el => (this.wrapDom = el)}\r\n      >\r\n        {\r\n          <CellEditor\r\n            value={this.state.editValue}\r\n            onChange={this.onEditHandle}\r\n            visible={this.state.EditMode}\r\n            onConfirm={() => this.leaveEditMod(true)}\r\n            onCancel={() => this.leaveEditMod(false)}\r\n            inputRef={el => (this.editorDom = el)}\r\n          />\r\n        }\r\n        {view}\r\n      </div>\r\n    );\r\n  }\r\n}\r\ninterface CellEditorProps {\r\n  visible: boolean;\r\n  value: string;\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  onConfirm: () => void;\r\n  onCancel: () => void;\r\n  inputRef: React.Ref<any>;\r\n}\r\nfunction CellEditor({\r\n  visible,\r\n  value,\r\n  onChange,\r\n  onConfirm,\r\n  onCancel,\r\n  inputRef\r\n}: CellEditorProps): React.ReactElement {\r\n  const keyDownHandle = (e: React.KeyboardEvent) => {\r\n    if (e.keyCode === 13) {\r\n      onConfirm();\r\n    }\r\n    if (e.keyCode === 27) {\r\n      onCancel();\r\n    }\r\n  };\r\n  return (\r\n    <input\r\n      ref={inputRef}\r\n      className={style.editor}\r\n      type={visible ? \"text\" : \"hidden\"}\r\n      value={value}\r\n      onChange={onChange}\r\n      onKeyDown={keyDownHandle}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Cell;\r\n","import Cell from './Cell'\r\nexport default Cell","import React from 'react'\r\nimport style from './Table.module.css'\r\nexport interface Props {\r\n  columns: {\r\n    id: string,\r\n    thContent: React.ReactNode,\r\n    tdRender: (rowEle: any, rowIndex: number) => React.ReactNode\r\n  }[],\r\n  data: any[]\r\n}\r\n\r\nclass Table extends React.PureComponent<Props> {\r\n  render() {\r\n    let { columns, data } = this.props;\r\n    return (\r\n      <table className={style.table}>\r\n        <Thead columns={columns} />\r\n        <Tbody data={data} columns={columns} />\r\n      </table>\r\n    );\r\n  }\r\n}\r\nfunction Thead({ columns }: { columns: Props['columns'] }): React.ReactElement {\r\n  return <thead className={style.thead}>\r\n    <tr>\r\n      {\r\n        columns.map(column => (\r\n          <th key={column.id}>\r\n            {column.thContent}\r\n          </th>\r\n        ))\r\n      }\r\n    </tr >\r\n  </thead >\r\n}\r\nfunction Tbody({ data, columns }: Props): React.ReactElement {\r\n  return <tbody className={style.tbody}>\r\n    {data.map((rowEle, rowIndex) => (\r\n      <tr\r\n        key={rowIndex}\r\n        className={rowEle.className}\r\n      >\r\n        {columns.map(column => (\r\n          <td key={rowIndex + column.id}>\r\n            {column.tdRender(rowEle, rowIndex)}\r\n          </td>\r\n        ))}\r\n      </tr>\r\n    ))}\r\n  </tbody>\r\n}\r\nexport default Table","import Table from './Table'\r\nexport default Table","import React from \"react\";\r\nimport style from \"./SortCell.module.css\";\r\ntype direction = \"up\" | \"down\" | \"normal\";\r\ninterface Props {\r\n  defaultValue?: direction;\r\n  onChange?: (direction: direction) => void;\r\n}\r\ntype State = {\r\n  direction: direction;\r\n};\r\nconst getNextDirection = (current: direction): direction => {\r\n  switch (current) {\r\n    case \"up\":\r\n      return \"down\";\r\n    case \"down\":\r\n      return \"normal\";\r\n    case \"normal\":\r\n      return \"up\";\r\n    default:\r\n      console.error(\"uncatch direction: \" + current);\r\n      return \"normal\";\r\n  }\r\n};\r\nclass SortCell extends React.PureComponent<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      direction: props.defaultValue || \"normal\"\r\n    };\r\n  }\r\n\r\n  sortHandle = () => {\r\n    const nextDirection = getNextDirection(this.state.direction);\r\n    this.setState({\r\n      direction: nextDirection\r\n    });\r\n    const { onChange } = this.props;\r\n    onChange && onChange(nextDirection);\r\n  };\r\n\r\n  render() {\r\n    const { direction } = this.state;\r\n    return (\r\n      <div\r\n        className={`${style.sortCell} ${direction ? style[direction] : \"\"}`}\r\n        onClick={this.sortHandle}\r\n      >\r\n        {this.props.children}\r\n        <span />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SortCell;\r\n","import SortCell from './SortCell'\r\nexport default SortCell","type OperatorFuncs = (a: number | string, b: number | string) => number;\r\n\r\ntype Operator = \"+\" | \"-\" | \"*\" | \"/\" | \"%\" | \"^\";\r\n\r\nconst operatorFunctions: {\r\n  \"+\": OperatorFuncs;\r\n  \"-\": OperatorFuncs;\r\n  \"*\": OperatorFuncs;\r\n  \"/\": OperatorFuncs;\r\n  \"%\": OperatorFuncs;\r\n  \"^\": OperatorFuncs;\r\n} = {\r\n  \"+\": (a, b) => Number(a) + Number(b),\r\n  \"-\": (a, b) => Number(a) - Number(b),\r\n  \"*\": (a, b) => Number(a) * Number(b),\r\n  \"/\": (a, b) => Number(a) / Number(b),\r\n  \"%\": (a, b) => Number(a) % Number(b),\r\n  \"^\": (a, b) => Math.pow(Number(a), Number(b))\r\n};\r\n\r\n/**\r\n * @description 字符串计算\r\n */\r\nfunction evalStr(str: string) {\r\n  const afterExpressArr = translateMidExpress2AfterExpressArr(str);\r\n  const stack = new Stack([]);\r\n  let i = 0;\r\n  let length = afterExpressArr.length;\r\n  while (i < length) {\r\n    const currentWord = afterExpressArr[i];\r\n    const currentType = checkWordType(currentWord);\r\n    if (currentType === \"number\") {\r\n      stack.push(currentWord);\r\n    } else {\r\n      let top = stack.pop();\r\n      let top2 = stack.pop();\r\n      const result = operatorFunctions[currentWord as Operator](top2, top);\r\n      stack.push(result);\r\n    }\r\n    i++;\r\n  }\r\n  return stack.top || \"\";\r\n}\r\n\r\n/**\r\n * @description 转换中缀表达式为后缀表达式\r\n */\r\nfunction translateMidExpress2AfterExpressArr(str: string): string[] {\r\n  let arr = str.match(/((\\d|\\.)+|[^\\d|\\s])/g);\r\n  if (arr === null) {\r\n    return [];\r\n  }\r\n  let i = 0;\r\n  let length = arr.length;\r\n  const stack = new Stack([]);\r\n  let afterExpressArr = [];\r\n\r\n  while (i < length) {\r\n    const currentWord = arr[i];\r\n    switch (checkWordType(currentWord)) {\r\n      case \"number\":\r\n        afterExpressArr.push(currentWord);\r\n        break;\r\n      case \"leftParentheses\":\r\n        stack.push(\"(\");\r\n        break;\r\n      case \"rightParentheses\":\r\n        while (stack.top !== \"(\") {\r\n          const poped = stack.pop();\r\n          afterExpressArr.push(poped);\r\n        }\r\n        stack.pop();\r\n        break;\r\n      case \"operator\":\r\n        let stackTop = stack.top;\r\n        if (stackTop === \"(\" || stack.length === 0) {\r\n          stack.push(currentWord);\r\n        } else {\r\n          stack\r\n            .popUntil(\r\n              stackOperator =>\r\n                isHigherPriority(currentWord, stackOperator) ||\r\n                stackOperator === \"(\"\r\n            )\r\n            .forEach(operator => afterExpressArr.push(operator));\r\n          stack.push(currentWord);\r\n        }\r\n        break;\r\n    }\r\n    i++;\r\n  }\r\n  while (stack.length) {\r\n    afterExpressArr.push(stack.pop());\r\n  }\r\n  return afterExpressArr;\r\n}\r\n\r\nfunction checkWordType(str: string): string {\r\n  if (str === \"(\") {\r\n    return \"leftParentheses\";\r\n  }\r\n  if (str === \")\") {\r\n    return \"rightParentheses\";\r\n  }\r\n  if (/^(\\d|\\.)+$/.test(str)) {\r\n    return \"number\";\r\n  }\r\n  if (/^(\\+|-|\\*|\\/|%|\\^)$/.test(str)) {\r\n    return \"operator\";\r\n  }\r\n  throw new Error(\"Error, Unknown Symbols: \" + str);\r\n}\r\n\r\nconst priorityMap = {\r\n  \"+\": 1,\r\n  \"-\": 1,\r\n  \"*\": 2,\r\n  \"/\": 2,\r\n  \"%\": 2,\r\n  \"^\": 3\r\n};\r\nfunction isHigherPriority(a: string, b: string): boolean {\r\n  if (!priorityMap.hasOwnProperty(a) || !priorityMap.hasOwnProperty(b)) {\r\n    return false;\r\n  }\r\n  if (priorityMap[a as Operator] > priorityMap[b as Operator]) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n\r\nclass Stack {\r\n  stack: any[];\r\n  constructor(arr: any[]) {\r\n    this.stack = arr;\r\n  }\r\n  get top() {\r\n    const { stack } = this;\r\n    return stack[stack.length - 1];\r\n  }\r\n  get length() {\r\n    const { stack } = this;\r\n    return stack.length;\r\n  }\r\n  get native() {\r\n    const { stack } = this;\r\n    return stack;\r\n  }\r\n  push = (...args: any[]) => this.stack.push.call(this.stack, ...args);\r\n  pop = () => this.stack.pop.call(this.stack);\r\n  get = (number: number) => this.stack[number];\r\n  popUntil = (func: (top: any) => boolean) => {\r\n    let poped = [];\r\n    const { stack } = this;\r\n    while (stack.length) {\r\n      if (!func(this.top)) {\r\n        poped.push(stack.pop());\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    return poped;\r\n  };\r\n}\r\nexport default evalStr;\r\n","function sortGrid(grid: any[][], index: number, isRow: boolean, sortFunc: (arr: any[]) => any[]): any[][] {\r\n  let clonedGrid = JSON.parse(JSON.stringify(grid))\r\n  if (isRow) {\r\n    return sort(clonedGrid)\r\n  } else {\r\n    const newGrid = transpose(clonedGrid);\r\n    return transpose(sort(newGrid))\r\n  }\r\n\r\n  function sort(_grid: any[][]) {\r\n    _grid[index] = sortFunc(_grid[index])\r\n    return _grid\r\n  }\r\n}\r\n\r\nfunction transpose(grid: any[][]) {\r\n  const newGrid: any[][] = [];\r\n  grid[0].forEach(() => {\r\n    newGrid.push([])\r\n  });\r\n\r\n  for (var i = 0; i < grid.length; i++) {\r\n    for (var j = 0; j < grid[0].length; j++) {\r\n      newGrid[j][i] = grid[i][j];\r\n    }\r\n  }\r\n  return newGrid;\r\n\r\n}\r\n\r\nexport default sortGrid","const createEmptyGrid = (x: number, y: number, item: any) =>\r\n  Array(y)\r\n    .fill(\"\")\r\n    .map(() =>\r\n      Array(x)\r\n        .fill(\"\")\r\n        .map(() => item)\r\n    );\r\nexport default createEmptyGrid;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Cell from \"./components/Cell\";\r\nimport Table from \"./components/Table\";\r\nimport SortCell from \"./components/SortCell\";\r\nimport strEval from \"./tools/strEval\";\r\nimport sortGrid from \"./tools/sortGrid\";\r\nimport createGrid from \"./tools/createGrid\";\r\n\r\nconst sortFuncs = {\r\n  up: (arr: any[]) => {\r\n    const { collect, indexCollect } = findUnEmpty([...arr]);\r\n    collect\r\n      .sort((a, b) => a.view - b.view)\r\n      .forEach((ele, index) => {\r\n        arr[indexCollect[index]] = ele;\r\n      });\r\n    return arr;\r\n  },\r\n  down: (arr: any[]) => {\r\n    const { collect, indexCollect } = findUnEmpty([...arr]);\r\n    collect\r\n      .sort((a, b) => b.view - a.view)\r\n      .forEach((ele, index) => {\r\n        arr[indexCollect[index]] = ele;\r\n      });\r\n    return arr;\r\n  },\r\n  normal: (arr: any[]) => {\r\n    return arr;\r\n  }\r\n};\r\nfunction findUnEmpty(arr: any[]) {\r\n  const collect: any[] = [];\r\n  const indexCollect: number[] = [];\r\n  arr.forEach((ele, index) => {\r\n    if (ele.view !== \"\") {\r\n      collect.push(ele);\r\n      indexCollect.push(index);\r\n    }\r\n  });\r\n  return {\r\n    collect,\r\n    indexCollect\r\n  };\r\n}\r\n\r\ntype direction = \"up\" | \"down\" | \"normal\";\r\ntype cellData = { value: String | void; view: String | void };\r\ntype State = {\r\n  data: cellData[][];\r\n  sortQueue: {\r\n    type: \"row\" | \"column\";\r\n    index: number;\r\n    func: (grid: cellData[][]) => cellData[][];\r\n  }[];\r\n};\r\nconst defRowCount = 5;\r\nconst defColumnCount = 10;\r\nclass App extends React.PureComponent<{}, State> {\r\n  state: State = {\r\n    data: createGrid(defRowCount, defColumnCount, {\r\n      value: \"\",\r\n      view: \"\"\r\n    }),\r\n    sortQueue: []\r\n  };\r\n\r\n  cellChangeHandle = (rowIndex: number, colIndex: number) => (\r\n    nextVal: string | void\r\n  ) => {\r\n    this.changeData(rowIndex, colIndex, nextVal || \"\");\r\n  };\r\n  changeData = (x: number, y: number, val: string) => {\r\n    const { data } = this.state;\r\n    data[x][y] = { value: val, view: dealValue2View(val) };\r\n    this.setState({\r\n      data: [...data]\r\n    });\r\n  };\r\n  onSort = (index: number, isRow: boolean) => (direction: direction) => {\r\n    const { sortQueue } = this.state;\r\n    const sortType = isRow ? \"row\" : \"column\";\r\n    const findedIndex = sortQueue.findIndex(\r\n      ele => ele.type === sortType && ele.index === index\r\n    );\r\n    if (direction === \"normal\") {\r\n      sortQueue.splice(findedIndex, 1);\r\n    } else {\r\n      const nextSortItem = {\r\n        type: sortType as \"row\" | \"column\",\r\n        index: index,\r\n        func: (grid: any[][]) =>\r\n          sortGrid(grid, index, isRow, sortFuncs[direction])\r\n      };\r\n      if (findedIndex >= 0) {\r\n        sortQueue[findedIndex] = nextSortItem;\r\n      } else {\r\n        sortQueue.push(nextSortItem);\r\n      }\r\n    }\r\n    this.setState({\r\n      sortQueue: [...sortQueue]\r\n    });\r\n  };\r\n\r\n  columns = [\r\n    {\r\n      id: \"empty\",\r\n      thContent: null,\r\n      tdRender: (rowEle: State[\"data\"][], rowIndex: number) => (\r\n        <SortCell onChange={this.onSort(rowIndex, true)}>\r\n          {String(rowIndex + 1)}\r\n        </SortCell>\r\n      )\r\n    },\r\n    ...Array(defRowCount)\r\n      .fill(0)\r\n      .map((ele, index) => String.fromCharCode(65 + index))\r\n      .map((word, colIndex) => {\r\n        const tdRender = (rowEle: cellData[], rowIndex: number) => {\r\n          return (\r\n            <Cell\r\n              view={String(rowEle[colIndex].view)}\r\n              value={String(rowEle[colIndex].value)}\r\n              onChange={this.cellChangeHandle(rowIndex, colIndex)}\r\n            />\r\n          );\r\n        };\r\n        return {\r\n          id: word,\r\n          thContent: (\r\n            <SortCell onChange={this.onSort(colIndex, false)}>{word}</SortCell>\r\n          ),\r\n          tdRender: tdRender\r\n        };\r\n      })\r\n  ];\r\n  get tableData() {\r\n    const { data, sortQueue } = this.state;\r\n    let newData = data;\r\n    sortQueue.forEach(({ func }) => {\r\n      newData = func(newData);\r\n    });\r\n    return newData;\r\n  }\r\n  render() {\r\n    return <Table data={this.tableData} columns={this.columns} />;\r\n  }\r\n}\r\n\r\nfunction dealValue2View(value: string): string {\r\n  if (/^'=/.test(value)) {\r\n    return value.substr(1);\r\n  }\r\n  if (/^=/.test(value)) {\r\n    try {\r\n      return strEval(value.substr(1));\r\n    } catch (error) {\r\n      console.error(error);\r\n      return value;\r\n    }\r\n  }\r\n  return value;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}